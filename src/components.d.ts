/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  GraphNodeInternal,
} from '@virtuaw/graphnodes';


export namespace Components {
  interface VawGraphNode {
    /**
    * The GraphNode instance.
    */
    'graphnode': GraphNodeInternal;
  }
  interface VawGraphNodeSocket {
    /**
    * Whether the socket is connected / currently connecting
    */
    'active': boolean;
    /**
    * Whether to show the socket connector if this is an input socket
    */
    'allowConnection': boolean;
    /**
    * Whether to show the input field if this is an input socket
    */
    'allowInput': boolean;
    /**
    * Whether this is an input or output socket
    */
    'isInput': boolean;
    /**
    * Callback for connection finish event
    */
    'onChange': Function;
    /**
    * Callback for connection finish event
    */
    'onConnectionFinish': Function;
    /**
    * Callback for connection start event
    */
    'onConnectionStart': Function;
    /**
    * The Socket's title
    */
    'title': string;
    /**
    * The Socket's current value
    */
    'value': any;
  }
  interface VawPiano {
    /**
    * The last key's note (as midi value)
    */
    'endNote': number;
    /**
    * The first key's note (as midi value)
    */
    'startNote': number;
  }
}

declare namespace LocalJSX {
  interface VawGraphNode extends JSXBase.HTMLAttributes {
    /**
    * The GraphNode instance.
    */
    'graphnode'?: GraphNodeInternal;
  }
  interface VawGraphNodeSocket extends JSXBase.HTMLAttributes {
    /**
    * Whether the socket is connected / currently connecting
    */
    'active'?: boolean;
    /**
    * Whether to show the socket connector if this is an input socket
    */
    'allowConnection'?: boolean;
    /**
    * Whether to show the input field if this is an input socket
    */
    'allowInput'?: boolean;
    /**
    * Whether this is an input or output socket
    */
    'isInput'?: boolean;
    /**
    * Callback for connection finish event
    */
    'onChange'?: Function;
    /**
    * Input default value change emitter
    */
    'onChange'?: (event: CustomEvent<any>) => void;
    /**
    * Callback for connection finish event
    */
    'onConnectionFinish'?: Function;
    /**
    * Event that's emitted when attempting to finish a connection
    */
    'onConnectionFinish'?: (event: CustomEvent<any>) => void;
    /**
    * Callback for connection start event
    */
    'onConnectionStart'?: Function;
    /**
    * Event that's emitted when starting to create a connection between two sockets
    */
    'onConnectionStart'?: (event: CustomEvent<any>) => void;
    /**
    * The Socket's title
    */
    'title'?: string;
    /**
    * The Socket's current value
    */
    'value'?: any;
  }
  interface VawPiano extends JSXBase.HTMLAttributes {
    /**
    * The last key's note (as midi value)
    */
    'endNote'?: number;
    /**
    * The first key's note (as midi value)
    */
    'startNote'?: number;
  }

  interface IntrinsicElements {
    'vaw-graph-node': VawGraphNode;
    'vaw-graph-node-socket': VawGraphNodeSocket;
    'vaw-piano': VawPiano;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


declare global {



  interface HTMLVawGraphNodeElement extends Components.VawGraphNode, HTMLStencilElement {}
  var HTMLVawGraphNodeElement: {
    prototype: HTMLVawGraphNodeElement;
    new (): HTMLVawGraphNodeElement;
  };

  interface HTMLVawGraphNodeSocketElement extends Components.VawGraphNodeSocket, HTMLStencilElement {}
  var HTMLVawGraphNodeSocketElement: {
    prototype: HTMLVawGraphNodeSocketElement;
    new (): HTMLVawGraphNodeSocketElement;
  };

  interface HTMLVawPianoElement extends Components.VawPiano, HTMLStencilElement {}
  var HTMLVawPianoElement: {
    prototype: HTMLVawPianoElement;
    new (): HTMLVawPianoElement;
  };

  interface HTMLElementTagNameMap {
    'vaw-graph-node': HTMLVawGraphNodeElement;
    'vaw-graph-node-socket': HTMLVawGraphNodeSocketElement;
    'vaw-piano': HTMLVawPianoElement;
  }

  interface ElementTagNameMap extends HTMLElementTagNameMap {}
}

